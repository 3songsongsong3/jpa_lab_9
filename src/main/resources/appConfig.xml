<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
        스프링 프레임워크가 제공하는 어노테이션 기반의 트랜잭션 관리자를 활성화 한다.
        @Transactional이 붙은 곳에 트랜잭션을 적용한다.
    -->
    <tx:annotation-driven/>

    <context:component-scan base-package="jpabook.jpashop.service, jpabook.jpashop.repository"/>

    <!--
        데이터베이스에 접근할 데이터 소스를 등록
        인메모리 방식 : jdbc:h2:mem:jpashop
        서버 방식 : jdbc:h2:tcp://localhost/~/jpashop:MVCC=TRUE
    -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:jpashop"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--
        트랜잭션 관리자 등록
        JPA를 사용하기 위해 org.springframework.orm.jpa.JpaTransactionManager로 등록
    -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JPA 예외를 스프링 예외로 변환 -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!--
        스프링 프레임워크에서 JPA를 사용하려면 LocalContainerEntityManagerFactoryBean을 스프링 빙으로 등록해야 한다.
        순수하게 자바만 사용하는 J2SE 환경에서는 persistence.xml에 엔티티 매니저 팩토리 정보를 설정하지만
        스프링 프레임워크에서 JPA를 사용하려면 아래와 같이 설정해야 한다.
    -->
    <!-- LocalContainerEntityManagerFactoryBean : JPA를 스프링 컨테이터에서 사용할 수 있도록 함 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- 사용할 데이터소스를 등록한다. -->
        <property name="dataSource" ref="dataSource"/>
        <!-- @Entity가 붙은 클래스를 자동으로 검색하기 위함 -->
        <property name="packagesToScan" value="jpabook.jpashop.domain"/> <!-- @Entity 탐색 시작 위치 -->
        <!-- 사용할 JPA 벤더 지정 -->
        <property name="jpaVendorAdapter">
            <!-- 하이버네이트 구현체 사용 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties"> <!-- 하이버네이트 상세 설정 -->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> <!-- 방언 -->
                <prop key="hibernate.show_sql">true</prop>                   <!-- SQL 보기 -->
                <prop key="hibernate.format_sql">true</prop>                 <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.use_sql_comments">true</prop>           <!-- SQL 코멘트 보기 -->
                <prop key="hibernate.id.new_generator_mappings">true</prop>  <!-- 새 버전의 ID 생성 옵션 -->
                <prop key="hibernate.hbm2ddl.auto">create</prop>             <!-- DDL 자동 생성 -->
            </props>
        </property>
    </bean>

</beans>